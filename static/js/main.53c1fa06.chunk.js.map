{"version":3,"sources":["assets/img/me.jpg","assets/img sync /^/.*$","assets/img/nabo1.png","assets/img/nabo2.png","assets/img/nabo3.png","assets/img/seb1.png","components/feature/about/About.js","components/feature/projects/Projects.js","components/feature/tech-stack/TechStack.js","components/menu/Menu.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","About","className","src","me","alt","href","target","icon","faLinkedin","faGithub","faFileDownload","Projects","useState","projects","professional","personal","setProjects","useEffect","axios","get","then","res","console","log","data","Carousel","interval","project","i","Item","key","require","image","Caption","title","description","TechStack","width","height","size","setSize","words","setWords","updateWindowDimensions","window","innerWidth","innerHeight","addEventListener","a","j","x","length","Math","floor","random","shuffleArray","removeEventListener","word","style","fontSize","value","opacity","text","Menu","props","item","onClick","onMenuClick","active","faHandPointLeft","refs","about","React","createRef","techStack","handleMenuClick","scrollTo","current","offsetTop","App","activePage","setActivePage","handleScroll","getBoundingClientRect","top","ref","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53c1fa06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.2dfa4b90.jpg\";","var map = {\n\t\"./me.jpg\": 11,\n\t\"./nabo1.png\": 53,\n\t\"./nabo2.png\": 54,\n\t\"./nabo3.png\": 55,\n\t\"./seb1.png\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","module.exports = __webpack_public_path__ + \"static/media/nabo1.ed9dbf51.png\";","module.exports = __webpack_public_path__ + \"static/media/nabo2.26ba1851.png\";","module.exports = __webpack_public_path__ + \"static/media/nabo3.64b84c43.png\";","module.exports = __webpack_public_path__ + \"static/media/seb1.c6ab0474.png\";","import React from 'react';\r\nimport './About.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport me from '../../../assets/img/me.jpg';\r\n\r\nconst About = () => (\r\n  <div className=\"page page-about\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 text-center\">\r\n          <img\r\n            src={me}\r\n            className=\"rounded-circle img-fluid mb-4 mt-4 mt-sm-0\"\r\n            alt=\"Me\"\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <h2>Hi!</h2>\r\n          <p>\r\n            My name is Mikael Juntti and I am a frontend developer with an\r\n            interest in design and UX. My current toolbox consists of\r\n            JavaScript/TypeScript, Angular, React.js, HTML/CSS, jQuery,\r\n            Bootstrap (among others). I'm always eager to learn more and to\r\n            develop my skills. Occasionally I also make guest appearances at\r\n            \"the other side\", perhaps writing some PHP and SQL. I strive to\r\n            write easy-to-read, slick and maintainable code, to challenge myself\r\n            and to surpass expectations.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex align-items-center\">\r\n            <ul className=\"list-unstyled d-inline-block mb-0\">\r\n              <li>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/mikael-juntti-a7666534/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <FontAwesomeIcon className=\"mr-2\" icon={faLinkedin} />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.github.com/ledzappa\" target=\"_blank\">\r\n                  <FontAwesomeIcon className=\"mr-2\" icon={faGithub} />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"cv2020.pdf\" target=\"_blank\">\r\n                  <button className=\"btn btn-outline-custom mb-2\">\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faFileDownload} />\r\n                    Download CV\r\n                  </button>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport './Projects.css';\r\nimport axios from 'axios';\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState({\r\n    projects: { professional: [], personal: [] },\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`mocks/projects.json`).then((res) => {\r\n      console.log(res.data);\r\n      setProjects(res.data.projects);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page page-projects\">\r\n      <div className=\"header\">\r\n        <h2>Projects</h2>\r\n      </div>\r\n      <Carousel interval={3000}>\r\n        {projects.professional?.map((project, i) => (\r\n          <Carousel.Item key={i}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={require('./../../../assets/img/' + project.image)}\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>{project.title}</h3>\r\n              <br />\r\n              <p>{project.description}</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './TechStack.css';\r\nimport axios from 'axios';\r\n\r\nconst shuffleArray = (a) => {\r\n  var j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n    x = a[i];\r\n    a[i] = a[j];\r\n    a[j] = x;\r\n  }\r\n  return a;\r\n};\r\n\r\nconst TechStack = () => {\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n  const [words, setWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      setSize({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n\r\n    updateWindowDimensions();\r\n    window.addEventListener('resize', () => updateWindowDimensions());\r\n\r\n    axios.get(`mocks/words.json`).then((res) => {\r\n      setWords(shuffleArray(res.data.words));\r\n    });\r\n\r\n    return () =>\r\n      window.removeEventListener('resize', () => updateWindowDimensions());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page page-tech-stack\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"mt-4\">&lt; TECH-STACK /&gt;</h1>\r\n            <hr />\r\n            <div className=\"text-center mb-4\">\r\n              {words.map((word, i) => (\r\n                <div\r\n                  className=\"d-inline-block mr-3\"\r\n                  style={{\r\n                    fontSize:\r\n                      word.value *\r\n                      (size.width > 1320 ? 1 : size.width > 600 ? 0.6 : 0.4),\r\n                    opacity: i % 2 === 1 ? 0.6 : 1,\r\n                  }}\r\n                  key={i}\r\n                >\r\n                  {word.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechStack;\r\n","import { faHandPointLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport './Menu.css';\r\n\r\nconst Menu = (props) => {\r\n  const menuItems = [\r\n    { id: 'about', title: 'About' },\r\n    { id: 'projects', title: 'Projects' },\r\n    { id: 'techStack', title: 'Tech Stack' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <ul>\r\n        {menuItems.map((item, i) => (\r\n          <li id={item.id} onClick={props.onMenuClick} key={i}>\r\n            {item.title}{' '}\r\n            {props.active === item.id && (\r\n              <FontAwesomeIcon icon={faHandPointLeft} size=\"lg\" />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect, useState } from 'react';\r\nimport About from '../feature/about/About';\r\nimport Projects from './../feature/projects/Projects';\r\nimport TechStack from './../feature/tech-stack/TechStack';\r\nimport Menu from './../menu/Menu';\r\nimport './App.css';\r\n\r\nconst refs = {\r\n  about: React.createRef(),\r\n  projects: React.createRef(),\r\n  techStack: React.createRef(),\r\n};\r\n\r\nconst scrollTo = (id) => {\r\n  window.scrollTo(0, refs[id].current.offsetTop);\r\n};\r\n\r\nconst handleMenuClick = (e) => {\r\n  scrollTo(e.target.id);\r\n};\r\n\r\nconst App = () => {\r\n  const [activePage, setActivePage] = useState('about');\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', (e) => handleScroll(e), true);\r\n  }, []);\r\n\r\n  const handleScroll = (e) => {\r\n    if (refs.techStack.current.getBoundingClientRect().top < 20) {\r\n      setActivePage('techStack');\r\n    } else if (refs.projects.current.getBoundingClientRect().top < 20) {\r\n      setActivePage('projects');\r\n    } else {\r\n      setActivePage('about');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <Menu onMenuClick={(e) => handleMenuClick(e)} active={activePage} />\r\n          <div ref={refs.about}>\r\n            <About />\r\n          </div>\r\n          <div ref={refs.projects}>\r\n            <Projects />\r\n          </div>\r\n          <div ref={refs.techStack}>\r\n            <TechStack />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport 'animate.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}