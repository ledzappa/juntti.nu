{"version":3,"sources":["components/about/About.js","components/menu/Menu.js","components/footer/Footer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["About","className","React","Component","Menu","state","showSidebar","handleResize","e","target","innerWidth","setState","handleClick","window","addEventListener","this","onClick","Footer","packageJson","version","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y7BA0BeA,E,iLAtBX,OACE,yBAAKC,UAAU,qCACb,yBAAKA,UAAU,sBACb,4CACA,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,gBAAb,ye,GAPQC,IAAMC,WCuDXC,G,iNArDbC,MAAQ,CACNC,aAAa,G,EAOfC,aAAe,SAAAC,GACT,EAAKH,MAAMC,aAAeE,EAAEC,OAAOC,YAAc,KACnD,EAAKC,SAAS,CAAEL,aAAa,K,EAIjCM,YAAc,WACZ,EAAKD,SAAS,CAAEL,aAAc,EAAKD,MAAMC,e,mFAVzCO,OAAOC,iBAAiB,SAAUC,KAAKR,gB,+BAcvC,OACE,6BACE,gCACE,wBAAIN,UAAU,yBACZ,qCACA,wCACA,2CACA,sCAEF,4BACEA,UAAU,oBACVe,QAASD,KAAKH,aAFhB,SAMF,yBACEX,UAAWc,KAAKV,MAAMC,YAAc,eAAiB,kBAErD,4BACEL,UAAU,oBACVe,QAASD,KAAKH,aAFhB,QAIA,wBAAIX,UAAU,OACZ,qCACA,wCACA,2CACA,4C,GA9COC,IAAMC,Y,OCUVc,E,2MATbZ,MAAQ,G,wEAGN,OACE,oCAAUa,EAAYC,a,GALPjB,IAAMC,W,MCeZiB,MAZf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCDcoB,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2D,kBCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0a2f3c34.chunk.js","sourcesContent":["import React from 'react';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-md-8 col-sm-10\">\n          <h2>Hello there!</h2>\n          <div className=\"content-bg-dark\">\n            <p className=\"text-justify\">\n              Welcome to my website (under construction). I'm a frontend\n              developer with an interest in design and UX. My current toolbox\n              consists of JavaScript/TypeScript, Angular8, HTML/CSS, jQuery,\n              Bootstrap (among others). I'm always eager to learn more and to\n              develop my skills. Occasionally I also make guest appearances at\n              \"the other side\", perhaps writing some PHP and SQL. I strive to\n              write easy-to-read, slick and maintainable code, to challenge\n              myself and to surpass expectations.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport './menu.css';\n\nclass Menu extends React.Component {\n  state = {\n    showSidebar: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  handleResize = e => {\n    if (this.state.showSidebar && e.target.innerWidth >= 576) {\n      this.setState({ showSidebar: false });\n    }\n  };\n\n  handleClick = () => {\n    this.setState({ showSidebar: !this.state.showSidebar });\n  };\n\n  render() {\n    return (\n      <div>\n        <header>\n          <ul className=\"d-none d-sm-block p-0\">\n            <li>About</li>\n            <li>Projects</li>\n            <li>Photography</li>\n            <li>Other</li>\n          </ul>\n          <button\n            className=\"d-block d-sm-none\"\n            onClick={this.handleClick}\n          >Show</button>\n        </header>\n\n        <div\n          className={this.state.showSidebar ? 'sidebar show' : 'sidebar hidden'}\n        >\n          <button\n            className=\"d-block d-sm-none\"\n            onClick={this.handleClick}\n          >Hide</button>\n          <ul className=\"p-0\">\n            <li>About</li>\n            <li>Projects</li>\n            <li>Photography</li>\n            <li>Other</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from 'react';\nimport packageJson from '../../../package.json';\n\nclass Footer extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <footer>v{packageJson.version}</footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport About from '../about/About';\nimport Menu from '../menu/Menu';\nimport Footer from '../footer/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <div className=\"pt-4\">\n        <About />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}