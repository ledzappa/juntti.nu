{"version":3,"sources":["components/about/About.js","components/menu/Menu.js","components/projects/Projects.js","components/app/App.js","serviceWorker.js","index.js"],"names":["About","className","React","Component","Menu","state","showSidebar","MenuItems","activeClassName","to","icon","faInfoCircle","faRocket","faCameraRetro","faPaperPlane","handleResize","e","target","innerWidth","setState","handleClick","console","log","window","addEventListener","this","faBars","size","onClick","version","Projects","projects","name","description","link","img","map","item","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4VAwBeA,E,iLApBX,OACE,yBAAKC,UAAU,sBACb,4CACA,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,gBAAb,we,GANUC,IAAMC,W,wCC8FXC,E,2MAlFbC,MAAQ,CACNC,aAAa,G,EAGfC,UAAY,kBACV,6BACE,kBAAC,IAAD,CAASC,gBAAgB,YAAYC,GAAG,UACtC,4BACE,kBAAC,IAAD,CAAiBC,KAAMC,MADzB,UAKF,kBAAC,IAAD,CAASH,gBAAgB,YAAYC,GAAG,aACtC,4BACE,kBAAC,IAAD,CAAiBC,KAAME,MADzB,aAKF,4BACE,kBAAC,IAAD,CAAiBF,KAAMG,MADzB,eAIA,4BACE,kBAAC,IAAD,CAAiBH,KAAMI,MADzB,a,EAWJC,aAAe,SAAAC,GACT,EAAKX,MAAMC,aAAeU,EAAEC,OAAOC,YAAc,KACnD,EAAKC,SAAS,CAAEb,aAAa,K,EAIjCc,YAAc,WACZC,QAAQC,IAAI,UACZ,EAAKH,SAAS,CAAEb,aAAc,EAAKD,MAAMC,e,mFAXzCiB,OAAOC,iBAAiB,SAAUC,KAAKV,gB,+BAevC,OACE,yBAAKd,UAAU,OACb,yBAAKA,UAAU,UACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,yBACZ,uBAAMM,UAAN,OAEF,kBAAC,IAAD,CACEN,UAAU,oBACVS,KAAMgB,IACNC,KAAK,KACLC,QAASH,KAAKL,eAGlB,yBACEnB,UACEwB,KAAKpB,MAAMC,YACP,oCACA,uCAGR,yBACEL,UACEwB,KAAKpB,MAAMC,YAAc,eAAiB,kBAG5C,wBAAIL,UAAU,MAAM2B,QAASH,KAAKL,aAChC,uBAAMb,UAAN,OAEF,yBAAKN,UAAU,kBAAf,KAAmC4B,Y,GA3E5B3B,IAAMC,W,eCwBV2B,E,2MAlCbC,SAAW,CACT,CACEC,KAAM,OACNC,YAAa,mBACbC,KAAM,kCACNC,IAAK,mBAEP,CACEH,KAAM,YACNC,YAAa,6BACbC,KAAM,kCACNC,IAAK,oB,wEAIP,OACE,yBAAKlC,UAAU,gCACb,wCACA,yBAAKA,UAAU,mBACZwB,KAAKM,SAASK,KAAI,SAAAC,GAAI,OACrB,yBAAKpC,UAAU,YACb,yBAAKA,UAAU,UACb,4BAAKoC,EAAKL,OAEZ,yBAAK/B,UAAU,sBAAf,SACA,yBAAKA,UAAU,sBAAsBoC,EAAKJ,uB,GA1BjC/B,IAAMC,WCwBdmC,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKrC,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CAAOsC,KAAK,SAASC,OAAK,EAACC,UAAWzC,IACtC,kBAAC,IAAD,CAAOuC,KAAK,YAAYC,OAAK,EAACC,UAAWX,IACzC,kBAAC,IAAD,CAAOS,KAAK,IAAIC,OAAK,EAACC,UAAWzC,IAEjC,kBAAC,IAAD,CAAOuC,KAAK,aAAaC,OAAK,EAACC,UAAWzC,SCNlC0C,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2D,kBCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5d2b8050.chunk.js","sourcesContent":["import React from 'react';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"col-md-8 col-sm-10\">\n        <h2>Hello there!</h2>\n        <div className=\"content-bg-dark\">\n          <p className=\"text-justify\">\n            Welcome to my website (under construction). I'm a frontend developer\n            with an interest in design and UX. My current toolbox consists of\n            JavaScript/TypeScript, Angular8, HTML/CSS, jQuery, Bootstrap (among\n            others). I'm always eager to learn more and to develop my skills.\n            Occasionally I also make guest appearances at \"the other side\",\n            perhaps writing some PHP and SQL. I strive to write easy-to-read,\n            slick and maintainable code, to challenge myself and to surpass\n            expectations.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport './menu.css';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInfoCircle,\n  faRocket,\n  faCameraRetro,\n  faPaperPlane,\n  faBars\n} from '@fortawesome/free-solid-svg-icons';\nimport { version } from '../../../package.json';\n\nclass Menu extends React.Component {\n  state = {\n    showSidebar: false\n  };\n\n  MenuItems = () => (\n    <div>\n      <NavLink activeClassName=\"is-active\" to=\"/about\">\n        <li>\n          <FontAwesomeIcon icon={faInfoCircle} />\n          About\n        </li>\n      </NavLink>\n      <NavLink activeClassName=\"is-active\" to=\"/projects\">\n        <li>\n          <FontAwesomeIcon icon={faRocket} />\n          Projects\n        </li>\n      </NavLink>\n      <li>\n        <FontAwesomeIcon icon={faCameraRetro} />\n        Photography\n      </li>\n      <li>\n        <FontAwesomeIcon icon={faPaperPlane} />\n        Contact\n      </li>\n    </div>\n  );\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  handleResize = e => {\n    if (this.state.showSidebar && e.target.innerWidth >= 576) {\n      this.setState({ showSidebar: false });\n    }\n  };\n\n  handleClick = () => {\n    console.log('click!');\n    this.setState({ showSidebar: !this.state.showSidebar });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <header className=\"text-center\">\n            <ul className=\"d-none d-sm-block p-0\">\n              <this.MenuItems />\n            </ul>\n            <FontAwesomeIcon\n              className=\"d-block d-sm-none\"\n              icon={faBars}\n              size=\"lg\"\n              onClick={this.handleClick}\n            />\n          </header>\n          <div\n            className={\n              this.state.showSidebar\n                ? 'menu-overlay animated fadeIn fast'\n                : 'menu-overlay animated fadeOut fast'\n            }\n          ></div>\n          <div\n            className={\n              this.state.showSidebar ? 'sidebar show' : 'sidebar hidden'\n            }\n          >\n            <ul className=\"p-0\" onClick={this.handleClick}>\n              <this.MenuItems />\n            </ul>\n            <div className=\"sidebar-footer\">v {version}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n\nclass Projects extends React.Component {\n  projects = [\n    {\n      name: 'Scng',\n      description: 'A word generator',\n      link: 'https://ledzappa.github.io/scng',\n      img: 'assets/scng.png'\n    },\n    {\n      name: 'Juntti.nu',\n      description: 'A website built with React',\n      link: 'https://ledzappa.github.io/scng',\n      img: 'assets/scng.png'\n    }\n  ];\n  render() {\n    return (\n      <div className=\"col-lg-8 col-md-10 col-sm-12\">\n        <h2>Projects</h2>\n        <div className=\"content-bg-dark\">\n          {this.projects.map(item => (\n            <div className=\"row pb-3\">\n              <div className=\"col-12\">\n                <h4>{item.name}</h4>\n              </div>\n              <div className=\"col-sm-4 text-left\">Image</div>\n              <div className=\"col-sm-8 text-left\">{item.description}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport About from '../about/About';\nimport Menu from '../menu/Menu';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Projects from '../projects/Projects';\n\nfunction App() {\n  return (\n    <Router>\n      <Menu />\n      <div className=\"row\">\n        <div className=\"col-12 pt-4 pt-sm-5\">\n          <div className=\"row d-flex justify-content-center\">\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/\" exact component={About} />\n            {/* For github pages */}\n            <Route path=\"/juntti.nu\" exact component={About} />\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}